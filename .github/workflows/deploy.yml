name: Build, Push, and Deploy Asterisk

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/avr-asterisk

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy and Verify Asterisk on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo '>> Logging into Docker Hub'
            echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

            echo '>> Pulling image'
            docker pull "$IMAGE_NAME"

            echo '>> (Re)starting container'
            docker stop asterisk 2>/dev/null || true
            docker rm asterisk 2>/dev/null || true

            docker run -d --name asterisk \
              -p 5060:5060/udp \
              -p 8088:8088 \
              -p 5038:5038 \
              -p 10000-20000:10000-20000/udp \
              --restart unless-stopped \
              "$IMAGE_NAME"

            echo '>> Waiting 5 seconds for Asterisk to boot...'
            sleep 5

            echo '>> Confirming Asterisk is running...'
            docker exec asterisk asterisk -rx 'core show version'

            echo '>> Checking SIP endpoint registration...'
            docker exec asterisk asterisk -rx 'pjsip show endpoints' || exit 1
            docker exec asterisk asterisk -rx 'pjsip show endpoints' | grep 6001 || (echo '❌ Extension 6001 not found' && exit 1)

            echo '✅ Asterisk deployed and verified successfully.'
          EOF

